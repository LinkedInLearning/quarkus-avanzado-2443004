%dev.quarkus.http.port=8280
## Quarkus core
quarkus.application.name=Sales Service
%dev.quarkus.log.category."com.kineteco".level=DEBUG
%test.quarkus.log.category."com.kineteco".level=DEBUG

kineteco-product-inventory/mp-rest/url=http://localhost:8080
%prod.kineteco-product-inventory/mp-rest/url=http://product-inventory-service:80

## Kubernetes extension
quarkus.container-image.group=com.kineteco
quarkus.container-image.name=sales-service
quarkus.kubernetes.name=sales-service

# Report generate every day at 5 am
kineteco.sales=0 0 5 * * ?

quarkus.jacoco.title=Sales Service
quarkus.jacoco.footer=Kineteco

# GraphQL Errors
quarkus.smallrye-graphql.default-error-message=Kineteco exception

# Cache
quarkus.cache.caffeine."products".initial-capacity=10 
quarkus.cache.caffeine."products".maximum-size=20
quarkus.cache.caffeine."products".expire-after-write=60S

# DB
%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=kineteco-credentials 

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=${username}
%prod.quarkus.datasource.password=${password}
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres.default:5432/kineteco

## Panache
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql